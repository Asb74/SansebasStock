rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /UsuariosAutorizados/{uid} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isSameUser() {
        return request.auth.uid == uid;
      }

      function emailMatches() {
        return request.auth.token.email != null &&
               resource != null &&
               resource.data.correo != null &&
               request.auth.token.email == resource.data.correo;
      }

      // Permite leer el documento cuando el UID coincide o cuando el correo
      // del token autenticado coincide con el almacenado en Firestore.
      allow read: if isSignedIn() && (isSameUser() || emailMatches());
      // Bloquear escrituras desde la app
      allow write: if false;
    }

    match /Storage/{camaraId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null
        && request.resource.data.CAMARA is string
        && request.resource.data.ESTANTERIAS is int
        && request.resource.data.NIVELES is int
        && request.resource.data.CAMARA.size() == 2
        && int(request.resource.data.CAMARA) > 0
        && request.resource.data.ESTANTERIAS > 0
        && request.resource.data.NIVELES > 0;
      allow delete: if request.auth != null;
    }

    // Bloquear cualquier otra colecci√≥n por defecto
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
